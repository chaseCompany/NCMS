<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cslRcp">
	<select id="cslRcp.getCslRcp" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* cslRcp.getCslRcp */
			   RCP_NO			, CSL_DT		, CSL_FM_TM		, CSL_TO_TM			, CSL_TERM_TM
			 , CSL_ID			, CSL_NM		, IFP_GB_CD		, IFP_GB_ETC		, IFP_MBR_NO
			 , IFP_NM			, IFP_GEND_CD	, IFP_AGE		, IFP_TEL_NO1		, IFP_TEL_NO2
			 , IFP_TEL_NO3		, IFP_AREA_CD	, IFP_JOB_CD	, TGP_MBR_NO		, TGP_NM
			 , TGP_GEND_CD		, TGP_AGE		, TGP_TEL_NO1	, TGP_TEL_NO2		, TGP_TEL_NO3
			 , TGP_AREA_CD		, TGP_FRG_CD	, TGP_JOB_CD	, IF_PATH_CD		, PBM_KND_CD
			 , CSL_TP_CD		, CSL_HIS_CD	, FST_DRUG_CD	, MAIN_DRUG_CD		, MAIN_DRUG
			 , CSL_CTNT			, MJR_MNG_CD	, AST_SCO		, RSKA_TP_CD		, RSKB_TP_CD
			 , RSKC_TP_CD		, RSK_SCO		, CRE_ID		, CRE_DT			, UPD_ID
			 , UPD_DT			, IFP_AREA_ETC	, TGP_AREA_ETC
		  FROM CSL_RCP
		 WHERE RCP_NO = #{rcpNo}
	]]>
	</select>

	<insert id="cslRcp.insertCslRcp" parameterType="hashMap">
	<![CDATA[
		INSERT /* cslRcp.insertCslRcp */ INTO CSL_RCP(
			   RCP_NO							, CSL_DT						, CSL_FM_TM						, CSL_TO_TM			, CSL_TERM_TM
			 , CSL_ID							, CSL_NM						, IFP_GB_CD						, IFP_GB_ETC		, IFP_MBR_NO
			 , IFP_NM							, IFP_GEND_CD					, IFP_AGE						, IFP_TEL_NO1		, IFP_TEL_NO2
			 , IFP_TEL_NO3						, IFP_AREA_CD					, IFP_JOB_CD					, TGP_MBR_NO		, TGP_NM
			 , TGP_GEND_CD						, TGP_AGE						, TGP_TEL_NO1					, TGP_TEL_NO2		, TGP_TEL_NO3
			 , TGP_AREA_CD						, TGP_FRG_CD					, TGP_JOB_CD					, IF_PATH_CD		, PBM_KND_CD
			 , CSL_TP_CD						, CSL_HIS_CD					, FST_DRUG_CD					, MAIN_DRUG_CD		, MAIN_DRUG
			 , CSL_CTNT							, MJR_MNG_CD					, AST_SCO						, RSKA_TP_CD		, RSKB_TP_CD
			 , RSKC_TP_CD						, RSK_SCO						, CRE_ID						, CRE_DT			, UPD_ID
			 , UPD_DT							, IFP_AREA_ETC					, TGP_AREA_ETC
		)VALUES(
			   #{rcpNo}							, #{cslDt}						, #{cslFmTm}					, #{cslToTm}		, CAST(#{cslTermTm} AS UNSIGNED)
			 , #{cslId}							, #{cslNm}						, #{ifpGbCd}					, #{ifpGbEtc}		, #{ifpMbrNo}
			 , #{ifpNm}							, #{ifpGendCd}					, #{ifpAge}						, #{ifpTelNo1}		, #{ifpTelNo2}
			 , CAST(#{ifpTelNo3} AS UNSIGNED)	, #{ifpAreaCd}					, #{ifpJobCd}					, #{tgpMbrNo}		, #{tgpNm}
			 , #{tgpGendCd}						, #{tgpAge}						, #{tgpTelNo1}					, #{tgpTelNo2}		, #{tgpTelNo3}
			 , #{tgpAreaCd}						, #{tgpFrgCd}					, #{tgpJobCd}					, #{ifPathCd}		, #{pbmKndCd}
			 , #{cslTpCd}						, #{cslHisCd}					, #{fstDrugCd}					, #{mainDrugCd}		, #{mainDrug}
			 , #{cslCtnt}						, #{mjrMngCd}					, CAST(#{astSco} AS UNSIGNED)	, #{rskaTpCd}		, #{rskbTpCd}
			 , #{rskcTpCd}						, CAST(#{rskSco} AS UNSIGNED)	, #{cslId}						, NOW()				, #{cslId}
			 , NOW()							, #{ifpAreaEtc}					, #{tgpAreaEtc}
		)
	]]>
	</insert>

	<select id="cslRcp.getCslRcpList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* cslRcp.getCslRcpList */ *
		  FROM (
				SELECT T.*, @RNUM := @RNUM + 1 AS ROWNUM
				  FROM (
						SELECT RCP_NO			, CSL_DT		, CSL_FM_TM		, CSL_TO_TM			, CSL_TERM_TM
							 , CSL_NM			, IFP_NM		, TGP_NM
						  FROM CSL_RCP
	]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="schGb != null or schGb != ''">
				<choose>
					<when test="schGb == 0">
						   AND CSL_NM LIKE CONCAT('%', REPLACE(#{schNm}, ' ', ''), '%')
					</when>
					<when test="schGb == 1">
						   AND IFP_NM LIKE CONCAT('%', REPLACE(#{schNm}, ' ', ''), '%')
					</when>
					<when test="schGb == 2">
						   AND TGP_NM LIKE CONCAT('%', REPLACE(#{schNm}, ' ', ''), '%')
					</when>
				</choose>
			</if>
		</trim>
	<![CDATA[
						 ORDER BY CSL_DT DESC, CSL_FM_TM DESC
				  ) T,(SELECT @RNUM := 0) RNUM
				 ORDER BY T.CSL_DT DESC, T.CSL_FM_TM DESC
		  ) T1
		 WHERE ROWNUM > (#{currentPageNo}-1) * #{recordCountPerPage}
		 ORDER BY T1.CSL_DT DESC, T1.CSL_FM_TM DESC 
		 LIMIT #{recordCountPerPage}
	]]>
	</select>

	<delete id="cslRcp.deleteCslRcp" parameterType="String">
	<![CDATA[
		DELETE /* cslRcp.deleteCslRcp */
		  FROM CSL_RCP
		  WHERE RCP_NO = #{rcpNo}
	]]>
	</delete>
</mapper>