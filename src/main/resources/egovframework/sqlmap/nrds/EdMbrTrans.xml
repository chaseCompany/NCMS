<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edMbrTrans">
	<insert id="edMbrTrans.insertEdMbrTrans" parameterType="hashMap">
	<![CDATA[
		INSERT /* edMbrTrans.insertEdMbrTrans */ INTO ED_MBR_TRANS(
			   MBR_NO			, R_ZIP_CD			, R_ADDR1			, R_ADDR2			, CRIME_NAME
			 , COOP_ORG			, COOP_MNGR			, COOP_TEL			, REQ_ORD_DT		, REQ_END_DT
			 , REQ_DT			, REQ_TYPE			, REQ_EXAMPLE		, ACCEPT_DT			, ACCEPT_ORG
			 , ACCEPT_MNGR		, FILE_ID			, CRE_ID			, CRE_DT			, UPD_ID
			 , UPD_DT
		)VALUES(
			   #{mbrNo}			, #{rZipCd}			, #{rAddr1}			, #{rAddr2}			, #{crimeName}
			 , #{coopOrg}		, #{coopMngr}		, #{coopTel}		, #{reqOrdDt}		, #{reqEndDt}
			 , #{reqDt}			, #{reqType}		, #{reqExample}		, #{acceptDt}		, #{acceptOrg}
			 , #{acceptMngr}	, #{fileId}			, #{loginId}		, NOW()				, #{loginId}
			 , NOW()
		)
	]]>
	</insert>

	<select id="edMbrTrans.getEdMbrTransLastInfo" parameterType="String" resultType="hashMap">
	<![CDATA[
		SELECT /* edMbrTrans.getEdMbrTransLastInfo */
			   EM.MBR_NO			, EM.MBR_NM				, EM.GEND_CD			, SC01.CD_NM AS GEND_NM	, EM.AGE
			 , EMT.COOP_ORG			, EM.TEL_NO1			, EM.TEL_NO2			, EM.TEL_NO3			, EMT.CRE_ID
			 , SC02.CD_NM AS SITE_NM
		  FROM ED_MBR EM
		  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND EM.GEND_CD = SC01.CD_ID)
		  LEFT JOIN ED_MBR_TRANS EMT ON (EM.MBR_NO = EMT.MBR_NO)
		  LEFT JOIN SYS_USR SU ON (EMT.CRE_ID = SU.USR_ID)
		  LEFT JOIN SYS_CD SC02 ON (SC02.GRP_CD = 'C3500' AND SU.SITE_CD = SC02.CD_ID)
		 WHERE EM.MBR_NO = #{mbrNo}
		 ORDER BY EMT.MBR_TRANS_ID DESC
		 LIMIT 1
	]]>
	</select>

	<select id="edMbrTrans.getEdMbrTransInfo" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* edMbrTrans.getEdMbrTransInfo */
			   EM.MBR_NO			, EM.MBR_NM				, EM.GEND_CD			, EM.JUMIN_NO1			, EM.AGE
			 , EM.TEL_NO1			, EM.TEL_NO2			, EM.TEL_NO3			, EM.ZIP_CD				, EM.ADDR1
			 , EM.ADDR2				, EM.JOB_CD				, EMT.MBR_TRANS_ID		, EMT.R_ZIP_CD			, EMT.R_ADDR1
			 , EMT.R_ADDR2			, EMT.CRIME_NAME		, EMT.COOP_ORG			, EMT.COOP_MNGR			, EMT.COOP_TEL
			 , EMT.REQ_ORD_DT		, EMT.REQ_END_DT		, EMT.REQ_DT			, EMT.REQ_TYPE			, EMT.REQ_EXAMPLE
			 , EMT.ACCEPT_DT		, EMT.ACCEPT_ORG		, EMT.ACCEPT_MNGR		, FI.ORIGNL_FILE_NM		, FI.FILE_ID
			 , FI.FILE_SEQ
		  FROM ED_MBR EM
		  JOIN ED_MBR_TRANS EMT ON (EM.MBR_NO = EMT.MBR_NO)
		  LEFT JOIN FILE_INFO FI ON (EMT.FILE_ID = FI.FILE_ID)
		 WHERE EM.MBR_NO = #{mbrNo}
	]]>
		<if test="mbrTransId != null and mbrTransId != ''">
		   AND EMT.MBR_TRANS_ID = #{mbrTransId}
		</if>
	</select>

	<select id="edMbrTrans.getEdMbrTransList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* edMbrTrans.getEdMbrTransList */
			   EM.MBR_NO			, EM.MBR_NM				, EM.GEND_CD			, EM.JUMIN_NO1			, EM.AGE
			 , EM.TEL_NO1			, EM.TEL_NO2			, EM.TEL_NO3			, EM.ZIP_CD				, EM.ADDR1
			 , EM.ADDR2				, EM.JOB_CD				, EMT.MBR_TRANS_ID AS MBR_ED_ID		, EMT.R_ZIP_CD			, EMT.R_ADDR1
			 , EMT.R_ADDR2			, EMT.CRIME_NAME		, EMT.COOP_ORG AS REQ_ORG			, EMT.COOP_MNGR			, EMT.COOP_TEL
			 , EMT.REQ_ORD_DT		, EMT.REQ_END_DT		, EMT.REQ_DT			, EMT.REQ_TYPE			, EMT.REQ_EXAMPLE
			 , EMT.ACCEPT_DT		, EMT.ACCEPT_ORG		, EMT.ACCEPT_MNGR
			 , SC01.CD_NM AS GEND_NM
			 , SC02.CD_NM AS SITE_NM
		  FROM ED_MBR EM
		  JOIN ED_MBR_TRANS EMT ON (EM.MBR_NO = EMT.MBR_NO)
		  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND EM.GEND_CD = SC01.CD_ID)
		  LEFT JOIN SYS_USR SU ON (EMT.CRE_ID = SU.USR_ID)
		  LEFT JOIN SYS_CD SC02 ON (SC02.GRP_CD = 'C3500' AND SU.SITE_CD = SC02.CD_ID)
		 WHERE EM.MBR_NO = #{mbrNo}
	]]>
		<if test="mbrTransId != null and mbrTransId != ''">
		   AND EMT.MBR_TRANS_ID = #{mbrTransId}
		</if>
		 ORDER BY EMT.MBR_TRANS_ID DESC
	</select>

	<update id="edMbrTrans.updateEdMbrTrans" parameterType="hashMap">
	<![CDATA[
		UPDATE /* edMbrTrans.updateEdMbrTrans */ ED_MBR_TRANS
		   SET R_ZIP_CD		= #{rZipCd}				, R_ADDR1			= #{rAddr1}
			 , R_ADDR2		= #{rAddr2}				, CRIME_NAME		= #{crimeName}
			 , COOP_ORG		= #{coopOrg}			, COOP_MNGR			= #{coopMngr}
			 , COOP_TEL		= #{coopTel}			, REQ_ORD_DT		= #{reqOrdDt}
			 , REQ_END_DT	= #{reqEndDt}			, REQ_DT			= #{reqDt}
			 , REQ_TYPE		= #{reqType}			, REQ_EXAMPLE		= #{reqExample}
			 , ACCEPT_DT	= #{acceptDt}			, FILE_ID			= #{fileId}
			 , UPD_ID		= #{loginId}			, UPD_DT			= NOW()
		 WHERE MBR_TRANS_ID = #{mbrTransId}
	]]>
	</update>

	<delete id="edMbrTrans.deleteEdMbrTrans" parameterType="hashMap">
	<![CDATA[
		DELETE /* edMbrTrans.deleteEdMbrTrans */ FROM ED_MBR_TRANS
		 WHERE MBR_TRANS_ID = #{mbrTransId}
		   AND MBR_NO = #{mbrNo}
	]]>
	</delete>
</mapper>