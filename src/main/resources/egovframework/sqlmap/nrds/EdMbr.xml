<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edMbr">
	<select id="edMbr.getEdMbrInfo" resultType="hashMap" parameterType="hashMap">
	<![CDATA[
		SELECT /* edMbr.getEdMbrInfo */
			   EM.MBR_NO		, EM.MBR_NM			, EM.GEND_CD		, EM.FRG_CD			, EM.JUMIN_NO1
			 , EM.AGE			, EM.TEL_NO1		, EM.TEL_NO2		, EM.TEL_NO3		, EM.ZIP_CD
			 , EM.ADDR1			, EM.ADDR2			, EM.MBR_TP1		, EM.MBR_TP2		, EM.MBR_TP3
			 , EM.MBR_TP4		, EM.MBR_TP5		, EM.MBR_TP6		, EM.MRG_CD			, EM.EDU_CD
			 , EM.EDU02_CD		, EM.RLGN_CD		, EM.JOB_CD			, EM.FST_DRUG_CD	, EM.FST_DRUG
			 , EM.MAIN_DRUG_CD	, EM.MAIN_DRUG		, EM.FST_AGE		, EM.LST_AGE		, EM.USE_TERM
			 , EM.USE_FRQ_CD	, EM.USE_CAU_CD		, EM.USE_CAU_ETC	, EM.LAW_PBM_CD		, EM.LAW_PBM_ETC
			 , EM.CRE_ID		, EM.CRE_USR_DT AS CRE_DT
			 , EM.UPD_ID		, SU.USR_NM AS UPD_NM		, DATE_FORMAT(EM.UPD_DT, '%Y%m%d') AS UPD_DT
			 , SC01.CD_NM AS GEND_NM
			 , FN_AGE_CD(EM.AGE,'Y') AS AGE_NM, EM.MBR_ST
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.FRG_CD AND GRP_CD = 'C1300') AS FRG_NM   		/* 내/외국인 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.MBR_ST AND GRP_CD = 'R0600') AS MBR_TP_NM 	/* 대상자상태  */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.MRG_CD AND GRP_CD = 'C2800') AS MRG_NM 			/* 결혼여부 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.EDU_CD AND GRP_CD = 'C8000') AS EDU_NM 			/* 최종학력 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.EDU02_CD AND GRP_CD = 'C7900') AS EDU02_NM 		/* 학력결과 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.RLGN_CD AND GRP_CD = 'C3000') AS RLGN_NM			/* 종교 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.JOB_CD AND GRP_CD = 'C1200') AS JOB_NM			/* 직업 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.FST_DRUG_CD AND GRP_CD = 'C1800') AS FST_DRUG_NM			/* 최초사용약물 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.MAIN_DRUG_CD AND GRP_CD = 'C1900') AS MAIN_DRUG_NM			/* 주요사용약물 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.USE_FRQ_CD AND GRP_CD = 'C2600') AS USE_FRQ_NM /* 사용빈도 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.USE_CAU_CD AND GRP_CD = 'C4100') AS USE_CAU_NM /* 사용원인 */
			 , (SELECT CD_NM FROM SYS_CD WHERE CD_ID = EM.LAW_PBM_CD AND GRP_CD = 'C3200') AS LAW_PBM_NM /* 약물관련 법적문제 */
		  FROM ED_MBR EM
		  LEFT JOIN SYS_USR SU ON (EM.UPD_ID = SU.USR_ID)
		  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND EM.GEND_CD = SC01.CD_ID)
		 WHERE MBR_NO = #{mbrNo}
	]]>
	</select>

	<select id="edMbr.getMbrNoSeq" resultType="String">
	<![CDATA[
		SELECT /* edMbr.getMbrNoSeq */
			   CONCAT('M', DATE_FORMAT(NOW(), '%Y%m%d%H'), LPAD(IFNULL(MAX(CAST(SUBSTR(MBR_NO, 12) AS UNSIGNED)), 0) + 1, 4, '0')) AS newMbrNo
		  FROM ED_MBR
		 WHERE MBR_NO LIKE CONCAT('M', DATE_FORMAT(NOW(), '%Y%m%d%H'), '%')
	]]>
	</select>

	<insert id="edMbr.insertEdMbr" parameterType="hashMap">
	<![CDATA[
		INSERT /* edMbr.insertEdMbr */ INTO ED_MBR(
			   MBR_NO			, MBR_NM			, GEND_CD			, FRG_CD			, JUMIN_NO1
			 , AGE				, TEL_NO1			, TEL_NO2			, TEL_NO3			, ZIP_CD
			 , ADDR1			, ADDR2				, MBR_ST			
			 , CRE_USR_DT		, CRE_ID			, CRE_DT			, UPD_ID			, UPD_DT
		)VALUES(
			   #{mbrNo}			, #{mbrNm}			, #{gendCd}			, #{frgCd}			, #{juminNo1}
			 , #{age}			, #{telNo1}			, #{telNo2}			, #{telNo3}			, #{zipCd}
			 , #{addr1}			, #{addr2}			, #{mbrSt}			
			 , #{creUsrDt}		, #{loginId}		, NOW()				, #{loginId}		, NOW()
		)
	]]>
	</insert>

	<update id="edMbr.updateEdMbr" parameterType="hashMap">
	<![CDATA[
		UPDATE /* edMbr.updateEdMbr */ ED_MBR
		   SET MBR_NM		= #{mbrNm}		, GEND_CD		= #{gendCd}
			 , FRG_CD		= #{frgCd}		, JUMIN_NO1		= #{juminNo1}
			 , AGE			= #{age}		, TEL_NO1		= #{telNo1}
			 , TEL_NO2		= #{telNo2}		, TEL_NO3		= #{telNo3}
			 , ZIP_CD		= #{zipCd}		, ADDR1			= #{addr1}
			 , ADDR2		= #{addr2}		, MBR_ST		= #{mbrSt}
			 , CRE_USR_DT	= #{creUsrDt}	, UPD_ID		= #{loginId}
			 , UPD_DT		= NOW()
		 WHERE MBR_NO = #{mbrNo}
	]]>
	</update>

	<select id="edMbr.getEdMbrListCount" parameterType="hashMap" resultType="int">
	<![CDATA[
		SELECT /* edMbr.getEdMbrListCount */ COUNT(EM.MBR_NO) AS CNT
		  FROM ED_MBR EM
		  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND EM.GEND_CD = SC01.CD_ID)
		  LEFT JOIN SYS_USR SU ON (EM.UPD_ID = SU.USR_ID)
	]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="mbrNm != null and mbrNm != ''">
		   AND EM.MBR_NM LIKE CONCAT('%', REPLACE(#{mbrNm}, ' ', ''), '%')
			</if>
			<if test="telNo != null and telNo != ''">
		   AND CONCAT(EM.TEL_NO1, EM.TEL_NO2, EM.TEL_NO3) LIKE CONCAT('%', REPLACE(REPLACE(#{telNo}, ' ', ''), '-', ''), '%')
			</if>
			<if test="searchSiteCd != null and searchSiteCd != ''">
							AND SU.SITE_CD =#{searchSiteCd}
			</if>
			<if test="saveChkMbrNm != null and saveChkMbrNm != ''">
		   AND EM.MBR_NM = REPLACE(#{saveChkMbrNm}, ' ', '')
			</if>
			<if test="saveChkJuminNo1 != null and saveChkJuminNo1 != ''">
		   AND EM.JUMIN_NO1 LIKE CONCAT('%', REPLACE(#{saveChkJuminNo1}, ' ', ''), '%')
			</if>
		</trim>
	</select>

	<select id="edMbr.getEdMbrList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* edMbr.getEdMbrList */ *
		  FROM (
				SELECT T.*, @RNUM := @RNUM + 1 AS ROWNUM
				  FROM (
						SELECT
							   EM.MBR_NO		, EM.MBR_NM			, EM.JUMIN_NO1			, EM.GEND_CD		, SC01.CD_NM AS GEND_NM
							 , EM.AGE			, EM.TEL_NO1		, EM.TEL_NO2			, EM.TEL_NO3		, EM.CRE_USR_DT AS CRE_DT
							 , EM.UPD_ID		, SU.USR_NM AS UPD_NM	, DATE_FORMAT(EM.UPD_DT, '%Y%m%d') AS UPD_DT
							 , FN_AGE_CD(EM.AGE,'Y') AS AGE_NM
						  FROM ED_MBR EM
						  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND EM.GEND_CD = SC01.CD_ID)
						  LEFT JOIN SYS_USR SU ON (EM.UPD_ID = SU.USR_ID)
	]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="mbrNm != null and mbrNm != ''">
						   AND EM.MBR_NM LIKE CONCAT('%', REPLACE(#{mbrNm}, ' ', ''), '%')
			</if>
			<if test="telNo != null and telNo != ''">
						   AND CONCAT(EM.TEL_NO1, EM.TEL_NO2, EM.TEL_NO3) LIKE CONCAT('%', REPLACE(REPLACE(#{telNo}, ' ', ''), '-', ''), '%')
			</if>
			<if test="searchSiteCd != null and searchSiteCd != ''">
							AND SU.SITE_CD =#{searchSiteCd}
			</if>
			
		</trim>
	<![CDATA[
						 ORDER BY EM.MBR_NO DESC
				  ) T,(SELECT @RNUM := 0) RNUM
				 ORDER BY T.MBR_NO DESC
		  ) T1
		 WHERE ROWNUM > (#{currentPageNo}-1) * #{recordCountPerPage}
		 ORDER BY T1.MBR_NO DESC
		 LIMIT #{recordCountPerPage}
	]]>
	</select>

	<delete id="edMbr.deleteEdMbr" parameterType="String">
	<![CDATA[
		DELETE /* edMbr.deleteEdMbr */ FROM ED_MBR
		 WHERE MBR_NO = #{mbrNo}
	]]>
	</delete>
</mapper>