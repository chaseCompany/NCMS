<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cslIdv">
	<select id="cslIdv.getCslIdvList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* cslRcp.getCslIdvList */
			   CSL_NO		, CSL_ID		, CSL_DT		, CSL_FM_TM		, CSL_TO_TM
			 , CSL_TERM_TM	, CSL_SBJ		, CSL_TGT		, MBR_NO
		  FROM CSL_IDV
	]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="mbrNo != null or mbrNo != ''">
		   AND MBR_NO = #{mbrNo}
			</if>
		</trim>
	<![CDATA[
		 ORDER BY CRE_DT DESC
	]]>
	</select>

	<select id="cslIdv.getCslIdv" parameterType="String" resultType="hashMap">
	<![CDATA[
		SELECT /* cslIdv.getCslIdv */
			   CI.MBR_NO		, CI.CSL_NO			, CI.CSL_ID			, SU.USR_NM AS CSL_NM	, CI.CSL_DT
			 , CI.CSL_FM_TM		, CI.CSL_TO_TM		, CI.CSL_TERM_TM	, CI.PGM_CD				, CI.CSL_TGT_CD
			 , CI.CSL_TP_CD		, CI.RSKA_TP_CD		, CI.RSKB_TP_CD		, CI.RSKC_TP_CD			, CI.RSK_SCO
			 , CI.CSL_SBJ		, CI.CSL_TGT		, CI.CSL_CTNT		, CI.NXT_CSL_DT			, CI.NXT_CSL_TM
			 , CI.NXT_CSL_CTNT	, CI.CRE_ID			, CI.CRE_DT			, CI.UPD_ID				, CI.UPD_DT
		  FROM CSL_IDV CI
		  LEFT JOIN SYS_USR SU ON (CI.CSL_ID = SU.USR_ID)
		 WHERE CI.CSL_NO = #{cslNo}
	]]>
	</select>

	<insert id="cslIdv.insertCslIdv" parameterType="hashMap">
	<![CDATA[
		INSERT /* cslIdv.insertCslIdv */ INTO CSL_IDV(
			   MBR_NO		, CSL_NO		, CSL_ID		, CSL_DT			, CSL_FM_TM
			 , CSL_TO_TM	, CSL_TERM_TM	, PGM_CD		, CSL_TGT_CD		, CSL_TP_CD
			 , RSKA_TP_CD	, RSKB_TP_CD	, RSKC_TP_CD	, RSK_SCO			, CSL_SBJ
			 , CSL_TGT		, CSL_CTNT		, NXT_CSL_DT	, NXT_CSL_TM		, NXT_CSL_CTNT
			 , CRE_ID		, CRE_DT		, UPD_ID		, UPD_DT
		)VALUES(
			   #{mbrNo}		, #{cslNo}		, #{cslId}		, #{cslDt}			, #{cslFmTm}
			 , #{cslToTm}	, #{cslTermTm}	, #{pgmCd}		, #{cslTgtCd}		, #{cslTpCd}
			 , #{rskaTpCd}	, #{rskbTpCd}	, #{rskcTpCd}	, #{rskSco}			, #{cslSbj}
			 , #{cslTgt}	, #{cslCtnt}	, #{nxtCslDt}	, #{nxtCslTm}		, #{nxtCslCtnt}
			 , #{cslId}		, NOW()			, #{cslId}		, NOW()
		)
	]]>
	</insert>

	<update id="cslIdv.updateCslIdv" parameterType="hashMap">
	<![CDATA[
		UPDATE /* cslIdv.updateCslIdv */ CSL_IDV
		   SET CSL_DT = #{cslDt}			, CSL_FM_TM = #{cslFmTm}
			 , CSL_TO_TM = #{cslToTm}		, CSL_TERM_TM = #{cslTermTm}
			 , PGM_CD = #{pgmCd}			, CSL_TGT_CD = #{cslTgtCd}
			 , CSL_TP_CD = #{cslTpCd}		, RSKA_TP_CD = #{rskaTpCd}
			 , RSKB_TP_CD = #{rskbTpCd}		, RSKC_TP_CD = #{rskcTpCd}
			 , RSK_SCO = #{rskSco}			, CSL_SBJ = #{cslSbj}
			 , CSL_TGT = #{cslTgt}			, CSL_CTNT = #{cslCtnt}
			 , NXT_CSL_DT = #{nxtCslDt}		, NXT_CSL_TM = #{nxtCslTm}
			 , NXT_CSL_CTNT = #{nxtCslCtnt}	, UPD_ID = #{cslId}
			 , UPD_DT = NOW()
		 WHERE CSL_NO = #{cslNo}
	]]>
	</update>

	<select id="cslIdv.getCslIdvSeq" resultType="String">
	<![CDATA[
		SELECT /* cslIdv.getCslIdvSeq */
			   CONCAT('C', DATE_FORMAT(NOW(), '%Y%m%d%H'), LPAD(IFNULL(MAX(CAST(SUBSTR(CSL_NO, 12) AS UNSIGNED)), 0) + 1, 4, '0')) AS rcpSeq
		  FROM CSL_IDV
		 WHERE CSL_NO LIKE CONCAT('C', DATE_FORMAT(NOW(), '%Y%m%d%H'), '%')
	]]>
	</select>

	<delete id="cslIdv.deleteCslIdv" parameterType="String">
	<![CDATA[
		DELETE /* cslIdv.deleteCslIdv */ FROM CSL_IDV
		 WHERE CSL_NO = #{cslNo}
	]]>
	</delete>
</mapper>