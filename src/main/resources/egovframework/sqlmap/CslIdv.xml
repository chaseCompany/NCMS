<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cslIdv">
	<select id="cslIdv.getCslIdvList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* cslIdv.getCslIdvList */
			   CSL_NO		, CSL_ID		, CSL_DT		, CSL_FM_TM		, CSL_TO_TM
			 , CSL_TERM_TM	, CSL_SBJ		, CSL_TGT		, MBR_NO
			 , SU.USR_NM AS CSL_NM
			 , SU.SITE_CD AS SITE_CD
		  FROM CSL_IDV CI
		  LEFT JOIN SYS_USR SU ON (CI.CSL_ID = SU.USR_ID)
	]]>
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="mbrNo != null or mbrNo != ''">
		   AND CI.MBR_NO = #{mbrNo}
			</if>
		</trim>
	<![CDATA[
		 ORDER BY CI.CRE_DT DESC
	]]>
	</select>

	<select id="cslIdv.getCslIdv" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT /* cslIdv.getCslIdv */
			   CI.MBR_NO				, CI.CSL_NO					, CI.CSL_ID					, SU.USR_NM AS CSL_NM		, CI.CSL_DT
			 , CI.CSL_FM_TM				, CI.CSL_TO_TM				, CI.CSL_TERM_TM			, CI.PGM_CD					, CI.CSL_TGT_CD
			 , CI.CSL_TP_CD				, CI.RSKA_TP_CD				, CI.RSKB_TP_CD				, CI.RSKC_TP_CD				, CONVERT(CI.RSK_SCO, CHAR) AS RSK_SCO
			 , CI.CSL_SBJ				, CI.CRISIS_COUNSEL			, CI.URS_CD					, CI.CSL_TGT				, CI.DRUG_USE_CD
			 , CI.OLD_ACT_CD			, CI.ACT_CD					, CI.AROUND_SUICIDE_CD		, CI.SUICIDE_PLAN_CD		, CI.OLD_ACT_WAY_CD
			 , CI.ACT_WAY_CD			, CI.CURE_CD				, CI.CSL_CTNT				, CI.CSL_RST				, CI.NXT_CSL_DT
			 , CI.NXT_CSL_TM			, CI.NXT_CSL_CTNT			, CI.FILE_ID				, CI.CRE_ID					, CI.CRE_DT
			 , CI.UPD_ID				, CI.UPD_DT
			 , CAST(AES_DECRYPT(UNHEX(MM.MBR_NM), #{paswKey}) AS CHAR) AS MBR_NM
			 , SC01.CD_NM AS GEND_NM				, MM.AGE							 		, MM.REG_DT
			 , SC02.CD_NM AS MEDIC_CARE_NM 		, SC03.CD_NM AS STS_NM 	 			, SC04.CD_NM AS JOB_NM
			 , SC05.CD_NM AS SITE_NM				, SU2.USR_NM AS MNG_USR_NM		
			 , SC06.CD_NM AS CSL_TGT_NM			, SC07.CD_NM AS CSL_TP_NM
			 , SC08.CD_NM AS RSKA_TP_NM			, SC09.CD_NM AS RSKB_TP_NM
			 , SC10.CD_NM AS RSKC_TP_NM			, SC11.CD_NM AS URS_NM
			 , FI.ORIGNL_FILE_NM				, FN_AGE_CD(MM.AGE,'Y') AS AGE_NM
		  FROM CSL_IDV CI
		  INNER JOIN MST_MBR MM ON MM.MBR_NO = CI.MBR_NO
		  LEFT JOIN SYS_USR SU  ON (SU.USR_ID = CI.CSL_ID)
		  LEFT JOIN SYS_USR SU2 ON (SU2.USR_ID = MM.MNG_USR_ID)
		  LEFT JOIN SYS_CD SC01 ON (SC01.GRP_CD = 'C1100' AND SC01.CD_ID = MM.GEND_CD)
		  LEFT JOIN SYS_CD SC02 ON (SC02.GRP_CD = 'C3100' AND SC02.CD_ID = MM.MEDIC_CARE_CD)
		  LEFT JOIN SYS_CD SC03 ON (SC03.GRP_CD = 'C5500' AND SC03.CD_ID = MM.STS_CD)
		  LEFT JOIN SYS_CD SC04 ON (SC04.GRP_CD = 'C1200' AND SC04.CD_ID = MM.JOB_CD )
		  LEFT JOIN SYS_CD SC05 ON (SC05.GRP_CD = 'C3500' AND SC05.CD_ID = SU.SITE_CD)
		  LEFT JOIN SYS_CD SC06 ON (SC06.GRP_CD = 'C2500' AND SC06.CD_ID = CI.CSL_TGT_CD)
		  LEFT JOIN SYS_CD SC07 ON (SC07.GRP_CD = 'C1600' AND SC07.CD_ID = CI.CSL_TP_CD)
		  LEFT JOIN SYS_CD SC08 ON (SC08.GRP_CD = 'C2100' AND SC08.CD_ID = CI.RSKA_TP_CD)
		  LEFT JOIN SYS_CD SC09 ON (SC09.GRP_CD = 'C2200' AND SC09.CD_ID = CI.RSKB_TP_CD)
		  LEFT JOIN SYS_CD SC10 ON (SC10.GRP_CD = 'C2300' AND SC10.CD_ID = CI.RSKC_TP_CD)
		  LEFT JOIN SYS_CD SC11 ON (SC11.GRP_CD = 'C5600' AND SC11.CD_ID = CI.URS_CD)
		  LEFT JOIN FILE_INFO FI ON (FI.FILE_ID = CI.FILE_ID)
	]]>
		 <trim prefix="WHERE" prefixOverrides="AND|OR">
			 <if test="cslNo != '' and cslNo != null"><!-- 상세 조회시  -->
			 	AND CI.CSL_NO = #{cslNo}
			 </if>
			 <if test="fmDt != '' and fmDt != null and toDt != '' and toDt != null"><!-- 통계 엑셀 조회시  -->
			 	AND CI.CSL_DT BETWEEN #{fmDt} AND #{toDt}
			 </if>
			 <if test="searchRoleCd != null and searchRoleCd != '' and searchRoleCd != '90'">
				<choose>
					<when test="searchRoleCd != 5"> 
						<if test="searchSiteCd != null and searchSiteCd != ''"> <!-- 관리자, 외부직원 제외: 본인 소속만 조회 -->
							AND SU.SITE_CD = ${searchSiteCd}
						</if>
					</when>
					<otherwise>
						<if test="searchUserId != null and searchUserId != ''"> <!-- 외부직원: 본인만 조회 -->
							AND CI.CSL_ID = #{searchUserId}
						</if>
					</otherwise>
				</choose>
			</if>
		 </trim>
	</select>

	<insert id="cslIdv.insertCslIdv" parameterType="hashMap">
	<![CDATA[
		INSERT /* cslIdv.insertCslIdv */ INTO CSL_IDV(
			   MBR_NO				, CSL_NO				, CSL_ID				, CSL_DT				, CSL_FM_TM
			 , CSL_TO_TM			, CSL_TERM_TM			, PGM_CD				, CSL_TGT_CD			, CSL_TP_CD
			 , RSKA_TP_CD			, RSKB_TP_CD			, RSKC_TP_CD			, RSK_SCO				, CSL_SBJ
			 , CRISIS_COUNSEL		, URS_CD				, CSL_TGT				, DRUG_USE_CD			, OLD_ACT_CD
			 , ACT_CD				, AROUND_SUICIDE_CD		, SUICIDE_PLAN_CD		, OLD_ACT_WAY_CD		, ACT_WAY_CD
			 , CURE_CD				, CSL_CTNT				, CSL_RST				, NXT_CSL_DT			, NXT_CSL_TM
			 , NXT_CSL_CTNT			, FILE_ID				, CRE_ID				, CRE_DT				, UPD_ID
			 , UPD_DT
		)VALUES(
			   #{mbrNo}				, #{cslNo}				, #{cslId}				, #{cslDt}				, #{cslFmTm}
			 , #{cslToTm}			, #{cslTermTm}			, #{pgmCd}				, #{cslTgtCd}			, #{cslTpCd}
			 , #{rskaTpCd}			, #{rskbTpCd}			, #{rskcTpCd}			, #{rskSco}				, #{cslSbj}
			 , #{crisisCounsel}		, #{ursCd}				, #{cslTgt}				, #{drugUseCd}			, #{oldActCd}
			 , #{actCd}				, #{aroundSuicideCd}	, #{suicidePlanCd}		, #{oldActWayCd}		, #{actWayCd}
			 , #{cureCd}			, #{cslCtnt}			, #{cslRst}				, #{nxtCslDt}			, #{nxtCslTm}
			 , #{nxtCslCtnt}		, #{fileId}				, #{cslId}				, NOW()					, #{cslId}
			 , NOW()
		)
	]]>
	</insert>

	<update id="cslIdv.updateCslIdv" parameterType="hashMap">
	<![CDATA[
		UPDATE /* cslIdv.updateCslIdv */ CSL_IDV
		   SET CSL_DT = #{cslDt}						, CSL_FM_TM = #{cslFmTm}
			 , CSL_TO_TM = #{cslToTm}					, CSL_TERM_TM = #{cslTermTm}
			 , PGM_CD = #{pgmCd}						, CSL_TGT_CD = #{cslTgtCd}
			 , CSL_TP_CD = #{cslTpCd}					, RSKA_TP_CD = #{rskaTpCd}
			 , RSKB_TP_CD = #{rskbTpCd}					, RSKC_TP_CD = #{rskcTpCd}
			 , RSK_SCO = #{rskSco}						, CSL_SBJ = #{cslSbj}
			 , CRISIS_COUNSEL = #{crisisCounsel}		, URS_CD = #{ursCd}
			 , CSL_TGT = #{cslTgt}						, DRUG_USE_CD = #{drugUseCd}
			 , OLD_ACT_CD = #{oldActCd}					, ACT_CD = #{actCd}
			 , AROUND_SUICIDE_CD = #{aroundSuicideCd}	, SUICIDE_PLAN_CD = #{suicidePlanCd}
			 , OLD_ACT_WAY_CD = #{oldActWayCd}			, ACT_WAY_CD = #{actWayCd}
			 , CURE_CD = #{cureCd}						, CSL_CTNT = #{cslCtnt}
			 , CSL_RST = #{cslRst}						, NXT_CSL_DT = #{nxtCslDt}
			 , NXT_CSL_TM = #{nxtCslTm}					, NXT_CSL_CTNT = #{nxtCslCtnt}
			 , FILE_ID = #{fileId}						, UPD_ID = #{cslId}
			 , UPD_DT = NOW()
		 WHERE CSL_NO = #{cslNo}
	]]>
	</update>

	<select id="cslIdv.getCslIdvSeq" resultType="String">
	<![CDATA[
		SELECT /* cslIdv.getCslIdvSeq */
			   CONCAT('C', DATE_FORMAT(NOW(), '%Y%m%d%H'), LPAD(IFNULL(MAX(CAST(SUBSTR(CSL_NO, 12) AS UNSIGNED)), 0) + 1, 4, '0')) AS rcpSeq
		  FROM CSL_IDV
		 WHERE CSL_NO LIKE CONCAT('C', DATE_FORMAT(NOW(), '%Y%m%d%H'), '%')
	]]>
	</select>

	<delete id="cslIdv.deleteCslIdv" parameterType="String">
	<![CDATA[
		DELETE /* cslIdv.deleteCslIdv */ FROM CSL_IDV
		 WHERE CSL_NO = #{cslNo}
	]]>
	</delete>
</mapper>